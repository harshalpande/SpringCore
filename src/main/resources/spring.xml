<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"
	xmlns:context="http://www.springframework.org/schema/context"
	
	default-init-method="myInitMethod"
	default-destroy-method="myDestroyMethod">
	
	<context:annotation-config/>
	
	<bean id="triangle"
		class="in.javabrains.springframework.bean.TriangleBean"
		init-method="myInitMethod" destroy-method="myDestroyMethod">
		<!-- 1. Using Properties <property name="type" value="equilateral"></property> -->

		<!-- 2. using constructors -->
		<!-- <constructor-arg type="java.lang.String" value="Equilateral"></constructor-arg> 
			<constructor-arg type="int" value="20"></constructor-arg> -->

		<!-- 3.b Object Refrences Destination / Passing Object as Attributes in 
			POJO -->
		<property name="pointA" ref="point1"></property>

		<!-- This is INNER bean, hence here ref of parent bean and ID of inner 
			bean is not required -->
		<property name="pointB">
			<bean class="in.javabrains.springframework.bean.PointBean">
				<property name="coordinateX" value="-20"></property>
				<property name="coordinateY" value="0"></property>
			</bean>
		</property>
		<property name="pointC" ref="point3"></property>

	</bean>

	<!-- 3.a Object Refrences Source -->
	<bean id="point1"
		class="in.javabrains.springframework.bean.PointBean">
		<qualifier value="circleQualifier"></qualifier>
		<property name="coordinateX" value="${pointA.coordinateX}"></property>
		<property name="coordinateY" value="${pointA.coordinateY}"></property>
	</bean>



	<bean id="point3"
		class="in.javabrains.springframework.bean.PointBean">
		<property name="coordinateX" value="20"></property>
		<property name="coordinateY" value="0"></property>
	</bean>

	<!-- Alias is used to access the same bean using alias name -->
	<alias name="triangle" alias="3PointAngle" />

	<!-- stereotype package annotation used @component on Circle bean class -->
	<!-- <bean id="circle"
		class="in.javabrains.springframework.bean.CircleBean">
		<property name="centre" ref="point1"></property>
		Suppose this mandatory 
			property is not supplied here, then to get the proper Error Message other 
			than NPE, @Required/@Autowired Annotation is required.
			@Required is deprecated
	</bean> -->
	
	<!-- below tag scans the package mentioned for annotations from org.springframework.stereotype packages -->
	<context:component-scan base-package="in.javabrains.springframework"></context:component-scan>

	<bean
		class="in.javabrains.springframework.bean.DisplayNameBeanPostProcessor"></bean>

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations"
			value="in/javabrains/springframework/locationProperty.properties"></property>
	</bean>
	
	<bean class="org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor"></bean>
	
	<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"></bean>

	<!-- For Extracting Messages from Properties files -->
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>in.javabrains.springframework.MyProperty_EN</value>
				<value>in.javabrains.springframework.MyProperty_FI</value>
			</list>
		</property>
	</bean>

</beans>